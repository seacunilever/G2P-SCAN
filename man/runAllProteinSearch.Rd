% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getUniprotData.R
\name{runAllProteinSearch}
\alias{runAllProteinSearch}
\title{Run a batch of search terms through the UniProt protein APIs and filter protein results to one protein accession per search term.}
\usage{
runAllProteinSearch(dataToSearch, callType, cluster = NULL, stopCluster = TRUE)
}
\arguments{
\item{dataToSearch}{Data.frame of data to search, must include column "search_term".}

\item{cluster}{Cluster to run parallel operation on}

\item{stopCluster}{If TRUE 'parallel::stopCluster(cl = cluster)' is run and localVar variable for cluster is set to NULL. If FALSE the cluster is not stopped}
}
\value{
return dataframe including protein accession results
}
\description{
This function can run one of two types of UniProt protein APIs for multiple search terms in batch and parallel. Results will be filtered on a priority criteria to result in one protein accession per search term.
UniProt protein API calls (callType)
\itemize{
\item{1. Database search - Get UniProt entries by using UniProt cross reference(search term's database origin) and ID search term. Takes the searchID along with the species database identifier which relates to the databases Intermine uses. If searchID starts with "^ENSMUSG", the Emsembl database will be used to search.
https://www.ebi.ac.uk/proteins/api/proteins/database:searchID?offset=0&size=-1}
\item{2. Taxonomy search - Get UniProt entries by searching using a exact_gene search term and taxonomy ID. The searchID inputted in to the function will be edited to remove "Dmel_" and "CELE_" from identifier before searching. 
https://www.ebi.ac.uk/proteins/api/proteins?offset=0&size=-1&exact_gene=seachID&taxid=taxid}
}
Results of the API call are initially filtered to match the taxonomy ID of the species searched before further filtering per gene result using the priority criteria for protein accession selection below:
\itemize{
\item{1. Reviewed entries (if no reviewed entries are present, the following steps will occur on unreviewed data)}
\item{2. Strongest evidence of existence. High-low: Experimental evidence at protein level, Experimental evidence at transcript level, Protein inferred from homology, Protein predicted, Protein uncertain.}
\item{3. Longest sequence}
\item{4. Version 1 of sequence}
\item{5. The first result of the remaining data}
}
The input data.frame to the function will be appended with the column "protein.accession" where the final selected protein accession number per row is given. The "search_term" columns is removed in the output.

Running of the API calls and filtering of results are run sequentially but each search terms run in parallel.
}
