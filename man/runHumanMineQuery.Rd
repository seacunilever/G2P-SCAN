% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/global_functions.R
\name{runHumanMineQuery}
\alias{runHumanMineQuery}
\title{Build and call HumanMine query}
\usage{
runHumanMineQuery(
  templateName,
  constraintPath,
  constraintOperators,
  constraintValues,
  constraintm.index,
  select
)
}
\arguments{
\item{templateName}{Name passed to getTemplateQuery}

\item{constraintPath}{Path passed to setConstraints - The variables which should be constrained}

\item{constraintOperators}{Operators passed to setConstraints - The relationship between constraint path and constraint value, eg '='}

\item{constraintValues}{Values passed to setConstraints - Values to be filtered on constraintPath}

\item{constraintm.index}{m.index passed to setConstraints - The constraint index}

\item{select}{Select passed to setQuery - Which values to return}
}
\value{
Data.frame of results from query with columns defined in select
}
\description{
Build and call HumanMine query by using and editing HumanMine prebuilt templates. Return results as data.frame of selected data columns.
}
\details{
This function first calls InterMineR::getTemplateQuery using the HumanMine database and parameter templateName to get an initial template query.
Secondly, the template query is edited by adding custom constraint using InterMineR::setConstraints and InterMineR::setQuery and parameters constraintPath (the variable to be constrained), constraintOperators (the criteria to filter), 
the constraintValue (the value to filter on) and constraintm.index (the position of the constraint).
The HumanMine query is then run via InterMineR using edited template returning data selected by the parameter select.
}
