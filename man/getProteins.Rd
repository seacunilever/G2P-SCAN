% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getUniprotData.R
\name{getProteins}
\alias{getProteins}
\title{Get Protein Accessions for gene inputs}
\usage{
getProteins(orthologueData, allHumanGenes, cluster = NULL, stopCluster = TRUE)
}
\arguments{
\item{orthologueData}{Data from output of function getOrthologueGenes}

\item{allHumanGenes}{Data.frame of "Gene.primaryIdentifier" and "Gene.symbol" as columns in that order. Function is not sensitive to column names but expects primary IDs in the first columns and gene symbols in the second}

\item{cluster}{Cluster to run parallel operation on}

\item{stopCluster}{If TRUE 'parallel::stopCluster(cl = cluster)' is run and localVar variable for cluster is set to NULL. If FALSE the cluster is not stopped}
}
\value{
Data.frame of input data appended with protein.accession results
}
\description{
For every gene row passed to this function in the orthologueData and allHumanGenes parameters, UniProt APIs will be called to determine a protein accession for each gene. 
Steps: \itemize{
\item {1. Assign primary IDs of input data as the search term. When no primary ID is provided but gene symbol is, gene symbol is assigned as the search term. }
\item {2. Run UniProt's protein API using database identifiers. UniProt entries are retrieved using UniProt cross reference and its ID. This step takes the searchID along with the species database identifier which relates to the databases Intermine uses. If searchID starts with "^ENSMUSG", the Emsembl database will be used to search.
API URL = https://www.ebi.ac.uk/proteins/api/proteins/database:searchID?offset=0&size=-1}
\item {3. Filter results to retrieve a singular protein accession for the gene search term using prioritisation criteria below
\itemize{
\item{1. Reviewed entries (if no reviewed entries are present, the following steps will occur on unreviewed data)}
\item{2. Strongest evidence of existence. High-low: Experimental evidence at protein level, Experimental evidence at transcript level, Protein inferred from homology, Protein predicted, Protein uncertain.}
\item{3. Longest sequence}
\item{4. Version 1 of sequence}
\item{5. The first result of the remaining data}
}}
\item {4. For entries which no protein accession were retrieved at step 3, run UniProt's protein API using taxonomy. When a gene symbol is available the search term is assigned to the gene symbol, when not available primary ID is used. UniProt entries are retrieved by searching using a exact_gene search term and  the taxonomy ID of the species. The search term will be edited to remove "Dmel_" and "CELE_" from identifier before searching. 
API URL = https://www.ebi.ac.uk/proteins/api/proteins?offset=0&size=-1&exact_gene=searchID&taxid=taxid#'}
\item {5. Combine results, returning data.frame of following columns: \itemize{
\item{Gene.homologues.homologue.primaryIdentifier}
\item{Gene.homologues.homologue.symbol}
\item{Gene.homologues.homologue.organism.shortName}
\item{protein.accession}
}
}
}

If a cluster is passed to the function the running of the API calls and filtering of results are run sequentially but each search terms run in parallel.
}
